# Generated by Django 4.2 on 2025-10-23 11:17

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Odd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.CharField(max_length=50)),
                ('odd_value', models.DecimalField(decimal_places=2, max_digits=6)),
                ('trj', models.DecimalField(blank=True, decimal_places=2, help_text='Player Return Rate (%) for this specific match/bookmaker', max_digits=5, null=True)),
                ('scraped_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'Odds',
                'ordering': ['-scraped_at'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookmaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Bookmakers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(max_length=150)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Leagues',
                'ordering': ['sport', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Sports',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='core.league')),
            ],
            options={
                'db_table': 'Teams',
                'ordering': ['league', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('live', 'Live'), ('finished', 'Finished'), ('postponed', 'Postponed')], default='scheduled', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='core.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='core.team')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='core.league')),
            ],
            options={
                'db_table': 'Matches',
                'ordering': ['match_date'],
            },
        ),
        migrations.CreateModel(
            name='MarketName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markets', to='core.sport')),
            ],
            options={
                'db_table': 'MarketNames',
                'ordering': ['sport', 'name'],
            },
        ),
        migrations.AddField(
            model_name='league',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leagues', to='core.sport'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['league'], name='idx_team_league'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('league', 'name')},
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['match_date'], name='idx_match_date'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['status'], name='idx_match_status'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['league'], name='idx_match_league'),
        ),
        migrations.AddIndex(
            model_name='marketname',
            index=models.Index(fields=['sport', 'code'], name='idx_sport_market'),
        ),
        migrations.AlterUniqueTogether(
            name='marketname',
            unique_together={('sport', 'code')},
        ),
        migrations.AddIndex(
            model_name='league',
            index=models.Index(fields=['sport'], name='idx_sport_league'),
        ),
        migrations.AlterUniqueTogether(
            name='league',
            unique_together={('sport', 'name')},
        ),
    ]
